// D:\Shop\oversize\shared\components\shared\profile-form.tsx
'use client';

import { zodResolver } from '@hookform/resolvers/zod';
import React from 'react';
import { FormProvider, useForm } from 'react-hook-form';
import { TFormRegisterValues, formRegisterSchema } from './modals/auth-modal/forms/schemas'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ —Å—Ö–µ–º–µ –≤–µ—Ä–Ω—ã–π
import { User } from '@prisma/client';
import toast from 'react-hot-toast';
import { signOut } from 'next-auth/react';
import Link from 'next/link'; // <<--- –î–û–ë–ê–í–¨–¢–ï –≠–¢–û–¢ –ò–ú–ü–û–†–¢
import { Container } from './container';
import { Title } from './title';
import { FormInput } from './form';
import { Button } from '../ui';
import { updateUserInfo } from '@/app/actions';

interface Props {
  data: User;
}

export const ProfileForm: React.FC<Props> = ({ data }) => {
  const form = useForm({
    resolver: zodResolver(formRegisterSchema), // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Å—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
    defaultValues: {
      fullName: data.fullName || '',
      email: data.email || '',
      password: '',
      confirmPassword: '',
    },
  });

  const onSubmit = async (values: TFormRegisterValues) => { // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∏–ø values —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–µ
    try {
      // –°—Ö–µ–º–∞ formRegisterSchema –æ–∂–∏–¥–∞–µ—Ç confirmPassword, –Ω–æ updateUserInfo - –Ω–µ—Ç.
      // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Ö–µ–º—É.
      // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è:
      await updateUserInfo({
        email: values.email,
        fullName: values.fullName,
        // –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –≤–≤–µ–¥–µ–Ω
        ...(values.password && { password: values.password }),
      });

      // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ toast.success –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
      toast.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã üìù');
      form.reset({ // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É, –æ—á–∏—â–∞—è –ø–æ–ª—è –ø–∞—Ä–æ–ª–µ–π
        ...values,
        password: '',
        confirmPassword: '',
      });
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö', {
        icon: '‚ùå',
      });
    }
  };

  const onClickSignOut = () => {
    signOut({
      callbackUrl: '/',
    });
  };

  return (
    <Container className="my-10">
      <Title text={`–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`} size="md" className="font-bold" />
 
      <FormProvider {...form}>
        <form className="flex flex-col gap-5 w-96 mt-10" onSubmit={form.handleSubmit(onSubmit)}>
          <FormInput name="email" label="E-Mail" required />
          <FormInput name="fullName" label="–ü–æ–ª–Ω–æ–µ –∏–º—è" required />

          <FormInput type="password" name="password" label="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" />
          <FormInput type="password" name="confirmPassword" label="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" />

          <Button loading={form.formState.isSubmitting} className="text-base mt-10" type="submit">
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </Button>
     {/* –ö–Ω–æ–ø–∫–∞ "–ú–æ–∏ –∑–∞–∫–∞–∑—ã" */}
          <Link href="/profile/orders" className="flex flex-col gap-5 w-96 "  >
            <Button variant="outline" className="text-base" type="button">
              –ú–æ–∏ –∑–∞–∫–∞–∑—ã
            </Button>
          </Link>
      

          <Button
            onClick={onClickSignOut}
            variant="secondary"
            disabled={form.formState.isSubmitting}
            className="text-base"
            type="button">
            –í—ã–π—Ç–∏
          </Button>

        
        </form>
      </FormProvider>
    </Container>
  );
};