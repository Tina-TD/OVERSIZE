// D:\Shop\oversize\app\(checkout)\checkout\page.tsx
'use client';

import { FormProvider, useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';

import {
  CheckoutSidebar,
  Container,
  Title,
  CheckoutAddressForm,
  CheckoutCart,
  CheckoutPersonalForm,
} from '@/shared/components/shared';
import { CheckoutFormValues, checkoutFormSchema } from '@/shared/constants';

import toast from 'react-hot-toast';
import React from 'react'; // –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å React, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ JSX –∏ —Ö—É–∫–∏
import { useSession } from 'next-auth/react';
import { Api } from '@/shared/services/api-client';
import { useCart } from '@/shared/hooks';
import { createOrder } from '@/app/actions';

export default function CheckoutPage() {
  const [submitting, setSubmitting] = React.useState(false);
  const { totalAmount, updateItemQuantity, items, removeCartItem, loading } = useCart();
  const { data: session } = useSession();

  const form = useForm<CheckoutFormValues>({ // form –æ–±—ä—è–≤–ª–µ–Ω –∑–¥–µ—Å—å
    resolver: zodResolver(checkoutFormSchema),
    defaultValues: {
      email: '',
      firstName: '',
      lastName: '',
      phone: '',
      address: '',
      comment: '',
    },
  });

  // –ò–∑–≤–ª–µ–∫–∞–µ–º setValue –∏–∑ form –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
  const { setValue } = form;

  React.useEffect(() => {
    async function fetchUserInfo() {
      try { // –•–æ—Ä–æ—à–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å try...catch
        const data = await Api.auth.getMe();
        if (data && data.fullName) { // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ data –∏–ª–∏ fullName –º–æ–≥—É—Ç –±—ã—Ç—å undefined
          const names = data.fullName.split(' ');
          const firstName = names[0] || '';
          const lastName = names.slice(1).join(' ') || ''; // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–º–∏–ª–∏–∏ –∏–ª–∏ –æ–Ω–∞ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤

          setValue('firstName', firstName);
          setValue('lastName', lastName);
          setValue('email', data.email || ''); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ email —Ç–æ–∂–µ –Ω–µ undefined
        }
      } catch (error) {
        console.error("Failed to fetch user info for form:", error);
        // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å toast –∏–ª–∏ –¥—Ä—É–≥—É—é –∏–Ω–¥–∏–∫–∞—Ü–∏—é –æ—à–∏–±–∫–∏
      }
    }

    if (session) {
      fetchUserInfo();
    }
  }, [session, setValue]); // <--- –î–û–ë–ê–í–õ–ï–ù setValue –í –ú–ê–°–°–ò–í –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô

  const onSubmit = async (data: CheckoutFormValues) => {
    // ... (–≤–∞—à –∫–æ–¥ onSubmit)
    try {
      setSubmitting(true);

      const url = await createOrder(data);

      // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ toast.success –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
      toast.success('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! üìù –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ–ø–ª–∞—Ç—É... ', {
        icon: '‚úÖ',
      });

      if (url) {
        window.location.href = url; // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ window.location.href –¥–ª—è —è–≤–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
      } else {
        // –ï—Å–ª–∏ URL –Ω–µ –ø—Ä–∏—à–µ–ª, –≤–æ–∑–º–æ–∂–Ω–æ, createOrder –≤–µ—Ä–Ω—É–ª null –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏
        setSubmitting(false); // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', {
          icon: '‚ùå',
        });
      }
    } catch (err) {
      console.error("Error creating order:", err);
      setSubmitting(false);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑', {
        icon: '‚ùå',
      });
    }
  };

  const onClickCountButton = (id: number, quantity: number, type: 'plus' | 'minus') => {
    const newQuantity = type === 'plus' ? quantity + 1 : quantity - 1;
    updateItemQuantity(id, newQuantity);
  };

  return (
    <Container className="mt-10">
      <Title text="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞" className="font-extrabold mb-8 text-[36px]" />

      <FormProvider {...form}>
        <form onSubmit={form.handleSubmit(onSubmit)}>
          <div className="flex gap-10">
            {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å */}
            <div className="flex flex-col gap-10 flex-1 mb-20">
              <CheckoutCart
                onClickCountButton={onClickCountButton}
                removeCartItem={removeCartItem}
                items={items}
                loading={loading}
              />
              <CheckoutPersonalForm className={loading ? 'opacity-40 pointer-events-none' : ''} />
              <CheckoutAddressForm className={loading ? 'opacity-40 pointer-events-none' : ''} />
            </div>

            {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å */}
            <div className="w-[450px]">
              <CheckoutSidebar totalAmount={totalAmount} loading={loading || submitting} />
            </div>
          </div>
        </form>
      </FormProvider>
    </Container>
  );
}